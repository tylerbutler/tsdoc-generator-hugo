{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.16.1",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "fluid-framework!",
  "docComment": "/**\n * The **fluid-framework** package bundles a collection of Fluid Framework client packages for easy use when paired with a corresponding service client package (for example, \\@fluidframework/azure-client or \\@fluidframework/tinylicious-client).\n *\n * @packageDocumentation\n */\n",
  "name": "fluid-framework",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "fluid-framework!",
      "name": "",
      "members": [
        {
          "kind": "Enum",
          "canonicalReference": "fluid-framework!AttachState:enum",
          "docComment": "/**\n * The attachment state of some Fluid data (e.g. a container or data store), denoting whether it is uploaded to the service. The transition from detached to attached state is a one-way transition.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AttachState "
            }
          ],
          "releaseTag": "Public",
          "name": "AttachState",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!AttachState.Attached:member",
              "docComment": "/**\n * In attached state, the data has completed upload to the service. It can be accessed by other clients after reaching attached state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Attached = "
                },
                {
                  "kind": "Content",
                  "text": "\"Attached\""
                }
              ],
              "releaseTag": "Public",
              "name": "Attached",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!AttachState.Attaching:member",
              "docComment": "/**\n * In attaching state, the data has started the upload to the service, but has not yet completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Attaching = "
                },
                {
                  "kind": "Content",
                  "text": "\"Attaching\""
                }
              ],
              "releaseTag": "Public",
              "name": "Attaching",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!AttachState.Detached:member",
              "docComment": "/**\n * In detached state, the data is only present on the local client's machine. It has not yet been uploaded to the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Detached = "
                },
                {
                  "kind": "Content",
                  "text": "\"Detached\""
                }
              ],
              "releaseTag": "Public",
              "name": "Detached",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ContainerSchema:interface",
          "docComment": "/**\n * The ContainerSchema declares the Fluid objects that will be available in the container. It includes both the instances of objects that are initially available upon container creation, as well as the types of objects that may be dynamically created throughout the lifetime of the container.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ContainerSchema "
            }
          ],
          "releaseTag": "Public",
          "name": "ContainerSchema",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ContainerSchema#dynamicObjectTypes:member",
              "docComment": "/**\n * Dynamic objects are Loadable objects that can be created after the initial Container creation.\n *\n * Types defined in `initialObjects` will always be available and are not required to be provided here.\n *\n * For best practice it's recommended to define all the dynamic types you create even if they are included via initialObjects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicObjectTypes?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectClass",
                  "canonicalReference": "fluid-framework!LoadableObjectClass:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dynamicObjectTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ContainerSchema#initialObjects:member",
              "docComment": "/**\n * initialObjects defines loadable objects that will be created when the Container is first created. It uses the key as the id and the value as the loadable object to create.\n *\n * In the example below two objects will be created when the Container is first created. One with id \"map1\" that will return a `SharedMap` and the other with id \"pair1\" that will return a `KeyValueDataObject`.\n * ```\n * {\n *   map1: SharedMap,\n *   pair1: KeyValueDataObject,\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialObjects: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectClassRecord",
                  "canonicalReference": "fluid-framework!LoadableObjectClassRecord:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialObjects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!DataObjectClass:type",
          "docComment": "/**\n * A DataObjectClass is a class that has a factory that can create a DataObject and a constructor that will return the type of the DataObject.\n *\n * @typeParam T - The class of the DataObject\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DataObjectClass<T extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidLoadable",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly factory: "
            },
            {
              "kind": "Reference",
              "text": "IFluidDataStoreFactory",
              "canonicalReference": "@fluidframework/runtime-definitions!IFluidDataStoreFactory:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "LoadableObjectCtor",
              "canonicalReference": "fluid-framework!LoadableObjectCtor:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DataObjectClass",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!DOProviderContainerRuntimeFactory:class",
          "docComment": "/**\n * The DOProviderContainerRuntimeFactory is container code that provides a single RootDataObject. This data object is dynamically customized (registry and initial objects) based on the schema provided to the container runtime factory.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DOProviderContainerRuntimeFactory extends "
            },
            {
              "kind": "Reference",
              "text": "BaseContainerRuntimeFactory",
              "canonicalReference": "@fluidframework/aqueduct!BaseContainerRuntimeFactory:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DOProviderContainerRuntimeFactory",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!DOProviderContainerRuntimeFactory:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DOProviderContainerRuntimeFactory` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(schema: "
                },
                {
                  "kind": "Reference",
                  "text": "ContainerSchema",
                  "canonicalReference": "fluid-framework!ContainerSchema:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "schema",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!DOProviderContainerRuntimeFactory#containerInitializingFirstTime:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected containerInitializingFirstTime(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IContainerRuntime",
                  "canonicalReference": "@fluidframework/container-runtime-definitions!IContainerRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "containerInitializingFirstTime"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!FluidContainer:class",
          "docComment": "/**\n * Implementation of the IFluidContainer.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FluidContainer extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "@fluidframework/common-utils!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidContainerEvents",
              "canonicalReference": "fluid-framework!IFluidContainerEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IFluidContainer",
              "canonicalReference": "fluid-framework!IFluidContainer:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FluidContainer",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!FluidContainer:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `FluidContainer` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(container: "
                },
                {
                  "kind": "Reference",
                  "text": "IContainer",
                  "canonicalReference": "@fluidframework/container-definitions!IContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", rootDataObject: "
                },
                {
                  "kind": "Reference",
                  "text": "RootDataObject",
                  "canonicalReference": "fluid-framework!RootDataObject:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "container",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "rootDataObject",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!FluidContainer#attach:member(1)",
              "docComment": "/**\n * A newly created container starts detached from the collaborative service. Calling attach() uploads the new container to the service and connects to the collaborative service.\n *\n * @returns A promise which resolves when the attach is complete, with the string identifier of the container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attach(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "attach"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!FluidContainer#attachState:member",
              "docComment": "/**\n * The current attachment state of the container. Once a container has been attached, it remains attached. When loading an existing container, it will already be attached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attachState(): "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState",
                  "canonicalReference": "fluid-framework!AttachState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attachState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!FluidContainer#connected:member",
              "docComment": "/**\n * Whether the container is connected to the collaboration session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get connected(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!FluidContainer#create:member(1)",
              "docComment": "/**\n * Create a new data object or DDS of the specified type. In order to share the data object or DDS with other collaborators and retrieve it later, store its handle in a collection like a SharedDirectory from your initialObjects.\n *\n * @param objectClass - The class of data object or DDS to create\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidLoadable",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(objectClass: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectClass",
                  "canonicalReference": "fluid-framework!LoadableObjectClass:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "objectClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!FluidContainer#dispose:member(1)",
              "docComment": "/**\n * Dispose of the container instance, permanently disabling it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!FluidContainer#disposed:member",
              "docComment": "/**\n * Whether the container is disposed, which permanently disables it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get disposed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!FluidContainer#initialObjects:member",
              "docComment": "/**\n * The collection of data objects and DDSes that were specified by the schema. These data objects and DDSes exist for the lifetime of the container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get initialObjects(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidLoadable",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialObjects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!FluidContainer#isDirty:member",
              "docComment": "/**\n * A container is considered **dirty** if it has local changes that have not yet been acknowledged by the service. You should always check the `isDirty` flag before closing the container or navigating away from the page. Closing the container while `isDirty === true` may result in the loss of operations that have not yet been acknowledged by the service.\n *\n * A container is considered dirty in the following cases:\n *\n * 1. The container has been created in the detached state, and either it has not been attached yet or it is in the process of being attached (container is in `attaching` state). If container is closed prior to being attached, host may never know if the file was created or not.\n *\n * 2. The container was attached, but it has local changes that have not yet been saved to service endpoint. This occurs as part of normal op flow where pending operation (changes) are awaiting acknowledgement from the service. In some cases this can be due to lack of network connection. If the network connection is down, it needs to be restored for the pending changes to be acknowledged.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isDirty(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDirty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IConnection:interface",
          "docComment": "/**\n * Base interface for information for each connection made to the Fluid session. This interface can be extended to provide additional information specific to each service.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConnection "
            }
          ],
          "releaseTag": "Public",
          "name": "IConnection",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IConnection#id:member",
              "docComment": "/**\n * A unique ID for the connection. A single user may have multiple connections, each with a different ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IConnection#mode:member",
              "docComment": "/**\n * Whether the connection is in read or read/write mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode: "
                },
                {
                  "kind": "Content",
                  "text": "\"write\" | \"read\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IFluidContainer:interface",
          "docComment": "/**\n * The IFluidContainer provides an entrypoint into the client side of collaborative Fluid data. It provides access to the data as well as status on the collaboration session.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidContainer extends "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IFluidContainerEvents",
              "canonicalReference": "fluid-framework!IFluidContainerEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidContainer",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IFluidContainer#attach:member(1)",
              "docComment": "/**\n * A newly created container starts detached from the collaborative service. Calling attach() uploads the new container to the service and connects to the collaborative service.\n *\n * @returns A promise which resolves when the attach is complete, with the string identifier of the container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attach(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "attach"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IFluidContainer#attachState:member",
              "docComment": "/**\n * The current attachment state of the container. Once a container has been attached, it remains attached. When loading an existing container, it will already be attached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attachState: "
                },
                {
                  "kind": "Reference",
                  "text": "AttachState",
                  "canonicalReference": "fluid-framework!AttachState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attachState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IFluidContainer#connected:member",
              "docComment": "/**\n * Whether the container is connected to the collaboration session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IFluidContainer#create:member(1)",
              "docComment": "/**\n * Create a new data object or DDS of the specified type. In order to share the data object or DDS with other collaborators and retrieve it later, store its handle in a collection like a SharedDirectory from your initialObjects.\n *\n * @param objectClass - The class of data object or DDS to create\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidLoadable",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(objectClass: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectClass",
                  "canonicalReference": "fluid-framework!LoadableObjectClass:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "objectClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IFluidContainer#dispose:member(1)",
              "docComment": "/**\n * Dispose of the container instance, permanently disabling it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IFluidContainer#disposed:member",
              "docComment": "/**\n * Whether the container is disposed, which permanently disables it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly disposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IFluidContainer#initialObjects:member",
              "docComment": "/**\n * The collection of data objects and DDSes that were specified by the schema. These data objects and DDSes exist for the lifetime of the container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly initialObjects: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectRecord",
                  "canonicalReference": "fluid-framework!LoadableObjectRecord:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialObjects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IFluidContainer#isDirty:member",
              "docComment": "/**\n * A container is considered **dirty** if it has local changes that have not yet been acknowledged by the service. You should always check the `isDirty` flag before closing the container or navigating away from the page. Closing the container while `isDirty === true` may result in the loss of operations that have not yet been acknowledged by the service.\n *\n * A container is considered dirty in the following cases:\n *\n * 1. The container has been created in the detached state, and either it has not been attached yet or it is in the process of being attached (container is in `attaching` state). If container is closed prior to being attached, host may never know if the file was created or not.\n *\n * 2. The container was attached, but it has local changes that have not yet been saved to service endpoint. This occurs as part of normal op flow where pending operation (changes) are awaiting acknowledgement from the service. In some cases this can be due to lack of network connection. If the network connection is down, it needs to be restored for the pending changes to be acknowledged.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDirty: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDirty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IFluidContainerEvents:interface",
          "docComment": "/**\n * Events emitted from IFluidContainer.\n *\n * ### \"connected\"\n *\n * The connected event is emitted when the `IFluidContainer` completes connecting to the Fluid service.\n *\n * #### Listener signature\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"dispose\"\n *\n * The dispose event is emitted when the `IFluidContainer` is disposed, which permanently disables it.\n *\n * #### Listener signature\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"disconnected\"\n *\n * The disconnected event is emitted when the `IFluidContainer` becomes disconnected from the Fluid service.\n *\n * #### Listener signature\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"saved\"\n *\n * The saved event is emitted when the `IFluidContainer` has local changes acknowledged by the service.\n *\n * #### Listener signature\n * ```typescript\n * () => void\n * ```\n *\n * ### \"dirty\"\n *\n * The dirty event is emitted when the `IFluidContainer` has local changes that have not yet been acknowledged by the service.\n *\n * #### Listener signature\n * ```typescript\n * () => void\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFluidContainerEvents extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFluidContainerEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IFluidContainerEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"connected\" | \"dispose\" | \"disconnected\" | \"saved\" | \"dirty\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IMember:interface",
          "docComment": "/**\n * Base interface to be implemented to fetch each service's member. This interface can be extended by each service to provide additional service-specific user metadata.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IMember "
            }
          ],
          "releaseTag": "Public",
          "name": "IMember",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IMember#connections:member",
              "docComment": "/**\n * The set of connections the user has made, e.g. from multiple tabs or devices.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connections: "
                },
                {
                  "kind": "Reference",
                  "text": "IConnection",
                  "canonicalReference": "fluid-framework!IConnection:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connections",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IMember#userId:member",
              "docComment": "/**\n * An ID for the user, unique among each individual user connecting to the session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IServiceAudience:interface",
          "docComment": "/**\n * Base interface to be implemented to fetch each service's audience. The generic M allows consumers to further extend the client object with service-specific details about the connecting client, such as device information, environment, or a username.\n *\n * @typeParam M - A service-specific member type.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IServiceAudience<M extends "
            },
            {
              "kind": "Reference",
              "text": "IMember",
              "canonicalReference": "fluid-framework!IMember:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IServiceAudienceEvents",
              "canonicalReference": "fluid-framework!IServiceAudienceEvents:interface"
            },
            {
              "kind": "Content",
              "text": "<M>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IServiceAudience",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IServiceAudience#getMembers:member(1)",
              "docComment": "/**\n * Returns an map of all users currently in the Fluid session where key is the userId and the value is the member object. The implementation may choose to exclude certain connections from the returned map. E.g. ServiceAudience excludes non-interactive connections to represent only the roster of live users.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMembers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMembers"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IServiceAudience#getMyself:member(1)",
              "docComment": "/**\n * Returns the current active user on this client once they are connected. Otherwise, returns undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMyself(): "
                },
                {
                  "kind": "Content",
                  "text": "M | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMyself"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IServiceAudienceEvents:interface",
          "docComment": "/**\n * Events that trigger when the roster of members in the Fluid session change. Only changes that would be reflected in the returned map of IServiceAudience's getMembers method will emit events.\n *\n * ### \"membersChanged\"\n *\n * The membersChanged event is emitted when a member is either added or removed.\n *\n * #### Listener signature\n * ```typescript\n * () => void;\n * ```\n *\n * ### \"memberAdded\"\n *\n * The memberAdded event is emitted when a member joins the audience.\n *\n * #### Listener signature\n * ```typescript\n * (clientId: string, member: M) => void;\n * ```\n *\n * - `clientId` - A unique identifier for the client\n *\n * - `member` - The service-specific member object for the client\n *\n * ### \"memberRemoved\"\n *\n * The memberRemoved event is emitted when a member leaves the audience.\n *\n * #### Listener signature\n * ```typescript\n * (clientId: string, member: M) => void;\n * ```\n *\n * - `clientId` - A unique identifier for the client\n *\n * - `member` - The service-specific member object for the client\n *\n * @typeParam M - A service-specific member type.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IServiceAudienceEvents<M extends "
            },
            {
              "kind": "Reference",
              "text": "IMember",
              "canonicalReference": "fluid-framework!IMember:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IServiceAudienceEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IServiceAudienceEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"membersChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IServiceAudienceEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"memberAdded\" | \"memberRemoved\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(clientId: string, member: M) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!LoadableObjectClass:type",
          "docComment": "/**\n * A LoadableObjectClass is an class object of DataObject or SharedObject\n *\n * @typeParam T - The class of the DataObject or SharedObject\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoadableObjectClass<T extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidLoadable",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "DataObjectClass",
              "canonicalReference": "fluid-framework!DataObjectClass:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SharedObjectClass",
              "canonicalReference": "fluid-framework!SharedObjectClass:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoadableObjectClass",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!LoadableObjectClassRecord:type",
          "docComment": "/**\n * A mapping of string identifiers to classes that will later be used to instantiate a corresponding DataObject or SharedObject in a LoadableObjectRecord.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoadableObjectClassRecord = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "LoadableObjectClass",
              "canonicalReference": "fluid-framework!LoadableObjectClass:type"
            },
            {
              "kind": "Content",
              "text": "<any>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoadableObjectClassRecord",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!LoadableObjectCtor:type",
          "docComment": "/**\n * An object with a constructor that will return an `IFluidLoadable`.\n *\n * @typeParam T - The class of the loadable object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoadableObjectCtor<T extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidLoadable",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "new (...args: any[]) => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoadableObjectCtor",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!LoadableObjectRecord:type",
          "docComment": "/**\n * A mapping of string identifiers to instantiated DataObjects or SharedObjects.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoadableObjectRecord = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "IFluidLoadable",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoadableObjectRecord",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!RootDataObject:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RootDataObject extends "
            },
            {
              "kind": "Reference",
              "text": "DataObject",
              "canonicalReference": "@fluidframework/aqueduct!DataObject:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    InitialState: "
            },
            {
              "kind": "Reference",
              "text": "RootDataObjectProps",
              "canonicalReference": "fluid-framework!RootDataObjectProps:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}> "
            }
          ],
          "releaseTag": "Public",
          "name": "RootDataObject",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RootDataObject#create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidLoadable",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(objectClass: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectClass",
                  "canonicalReference": "fluid-framework!LoadableObjectClass:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "objectClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RootDataObject#hasInitialized:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected hasInitialized(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "hasInitialized"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RootDataObject#initializingFirstTime:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected initializingFirstTime(props: "
                },
                {
                  "kind": "Reference",
                  "text": "RootDataObjectProps",
                  "canonicalReference": "fluid-framework!RootDataObjectProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "initializingFirstTime"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!RootDataObject#initialObjects:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get initialObjects(): "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectRecord",
                  "canonicalReference": "fluid-framework!LoadableObjectRecord:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialObjects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!RootDataObject#InitialState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InitialState: "
                },
                {
                  "kind": "Reference",
                  "text": "RootDataObjectProps",
                  "canonicalReference": "fluid-framework!RootDataObjectProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "InitialState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!RootDataObjectProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RootDataObjectProps "
            }
          ],
          "releaseTag": "Public",
          "name": "RootDataObjectProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!RootDataObjectProps#initialObjects:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialObjects: "
                },
                {
                  "kind": "Reference",
                  "text": "LoadableObjectClassRecord",
                  "canonicalReference": "fluid-framework!LoadableObjectClassRecord:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialObjects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!ServiceAudience:class",
          "docComment": "/**\n * Base class for providing audience information for sessions interacting with FluidContainer This can be extended by different service-specific client packages to additional parameters to the user and client details returned in IMember\n *\n * @typeParam M - A service-specific member type.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class ServiceAudience<M extends "
            },
            {
              "kind": "Reference",
              "text": "IMember",
              "canonicalReference": "fluid-framework!IMember:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "IMember",
              "canonicalReference": "fluid-framework!IMember:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "@fluidframework/common-utils!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IServiceAudienceEvents",
              "canonicalReference": "fluid-framework!IServiceAudienceEvents:interface"
            },
            {
              "kind": "Content",
              "text": "<M>> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IServiceAudience",
              "canonicalReference": "fluid-framework!IServiceAudience:interface"
            },
            {
              "kind": "Content",
              "text": "<M> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ServiceAudience",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!ServiceAudience:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ServiceAudience` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(container: "
                },
                {
                  "kind": "Reference",
                  "text": "IContainer",
                  "canonicalReference": "@fluidframework/container-definitions!IContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "container",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!ServiceAudience#audience:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly audience: "
                },
                {
                  "kind": "Reference",
                  "text": "IAudience",
                  "canonicalReference": "fluid-framework!IAudience:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "audience",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!ServiceAudience#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly container: "
                },
                {
                  "kind": "Reference",
                  "text": "IContainer",
                  "canonicalReference": "@fluidframework/container-definitions!IContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!ServiceAudience#createServiceMember:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected abstract createServiceMember(audienceMember: "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "M"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "audienceMember",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createServiceMember"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!ServiceAudience#getMembers:member(1)",
              "docComment": "/**\n * Returns an map of all users currently in the Fluid session where key is the userId and the value is the member object. The implementation may choose to exclude certain connections from the returned map. E.g. ServiceAudience excludes non-interactive connections to represent only the roster of live users.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMembers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMembers"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!ServiceAudience#getMyself:member(1)",
              "docComment": "/**\n * Returns the current active user on this client once they are connected. Otherwise, returns undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMyself(): "
                },
                {
                  "kind": "Content",
                  "text": "M | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMyself"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!ServiceAudience#lastMembers:member",
              "docComment": "/**\n * Retain the most recent member list. This is so we have more information about a member leaving the audience in the removeMember event. It allows us to match the behavior of the addMember event where it only fires on a change to the members this class exposes (and would actually produce a change in what getMembers returns). It also allows us to provide the client details in the event which makes it easier to find that client connection in a map keyed on the userId and not clientId. This map will always be up-to-date in a removeMember event because it is set once at construction and in every addMember event. It is mapped clientId to M to be better work with what the IAudience event provides\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected lastMembers: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastMembers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!ServiceAudience#shouldIncludeAsMember:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected shouldIncludeAsMember(member: "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "member",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "shouldIncludeAsMember"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 6,
            "endIndex": 10
          },
          "implementsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!SharedObjectClass:type",
          "docComment": "/**\n * A SharedObjectClass is a class that has a factory that can create a DDS (SharedObject) and a constructor that will return the type of the DataObject.\n *\n * @typeParam T - The class of the SharedObject\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SharedObjectClass<T extends "
            },
            {
              "kind": "Reference",
              "text": "IFluidLoadable",
              "canonicalReference": "@fluidframework/core-interfaces!IFluidLoadable:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly getFactory: () => "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "LoadableObjectCtor",
              "canonicalReference": "fluid-framework!LoadableObjectCtor:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SharedObjectClass",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IAudience:interface",
          "docComment": "/**\n * Audience represents all clients connected to the op stream, both read-only and read/write.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAudience extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IAudience",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IAudience#getMember:member(1)",
              "docComment": "/**\n * Get details about the connected client with the specified clientId, or undefined if the specified client isn't connected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMember(clientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getMember"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IAudience#getMembers:member(1)",
              "docComment": "/**\n * List all clients connected to the op stream, keyed off their clientId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMembers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMembers"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IAudience#on:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"addMember\" | \"removeMember\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(clientId: string, client: "
                },
                {
                  "kind": "Reference",
                  "text": "IClient",
                  "canonicalReference": "@fluidframework/protocol-definitions!IClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ],
              "name": "on"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!DirectoryFactory:class",
          "docComment": "/**\n * The factory that defines the directory.\n *\n * @sealed\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DirectoryFactory "
            }
          ],
          "releaseTag": "Public",
          "name": "DirectoryFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!DirectoryFactory#attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!DirectoryFactory.Attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!DirectoryFactory#create:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.create}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedDirectory",
                  "canonicalReference": "fluid-framework!ISharedDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!DirectoryFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedDirectory",
                  "canonicalReference": "fluid-framework!ISharedDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!DirectoryFactory#type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!DirectoryFactory.Type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Type = \"https://graph.microsoft.com/types/directory\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IDirectory:interface",
          "docComment": "/**\n * Interface describing actions on a directory.\n *\n * @remarks\n *\n * When used as a Map, operates on its keys.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectory extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IEventProvider",
              "canonicalReference": "@fluidframework/common-definitions!IEventProvider:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDirectoryEvents",
              "canonicalReference": "fluid-framework!IDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@fluidframework/common-definitions!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectory",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IDirectory#absolutePath:member",
              "docComment": "/**\n * The absolute path of the directory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly absolutePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "absolutePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#createSubDirectory:member(1)",
              "docComment": "/**\n * Creates an IDirectory child of this IDirectory, or retrieves the existing IDirectory child if one with the same name already exists.\n *\n * @param subdirName - Name of the new child directory to create\n *\n * @returns The IDirectory child that was created or retrieved\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#deleteSubDirectory:member(1)",
              "docComment": "/**\n * Deletes an IDirectory child of this IDirectory, if it exists, along with all descendent keys and directories.\n *\n * @param subdirName - Name of the child directory to delete\n *\n * @returns True if the IDirectory existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "deleteSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#get:member(1)",
              "docComment": "/**\n * Retrieves the value stored at the given key from the directory.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#getSubDirectory:member(1)",
              "docComment": "/**\n * Gets an IDirectory child of this IDirectory, if it exists.\n *\n * @param subdirName - Name of the child directory to get\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#getWorkingDirectory:member(1)",
              "docComment": "/**\n * Get an IDirectory within the directory, in order to use relative paths from that location.\n *\n * @param relativePath - Path of the IDirectory to get, relative to this IDirectory\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWorkingDirectory(relativePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getWorkingDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#hasSubDirectory:member(1)",
              "docComment": "/**\n * Checks whether this directory has a child directory with the given name.\n *\n * @param subdirName - Name of the child directory to check\n *\n * @returns True if it exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "hasSubDirectory"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The IDirectory itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IDirectory#subdirectories:member(1)",
              "docComment": "/**\n * Gets an iterator over the IDirectory children of this IDirectory.\n *\n * @returns The IDirectory iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirectories(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "subdirectories"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            },
            {
              "startIndex": 4,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IDirectoryDataObject:interface",
          "docComment": "/**\n * Defines the in-memory object structure to be used for the conversion to/from serialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryDataObject "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryDataObject",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IDirectoryDataObject#storage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storage?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializableValue",
                  "canonicalReference": "fluid-framework!ISerializableValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "storage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IDirectoryDataObject#subdirectories:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirectories?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [subdirName: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectoryDataObject",
                  "canonicalReference": "fluid-framework!IDirectoryDataObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "subdirectories",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IDirectoryEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the directory data.\n *\n * ### \"containedValueChanged\"\n *\n * The containedValueChanged event is emitted when a key is set or deleted. As opposed to the SharedDirectory's valueChanged event, this is emitted only on the IDirectory that directly contains the key.\n *\n * #### Listener signature\n * ```typescript\n * (changed: IValueChanged, local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `changed` - Information on the key that changed and its value prior to the change.\n *\n * - `local` - Whether the change originated from the this client.\n *\n * - `target` - The IDirectory itself.\n *\n * ### \"disposed\"\n *\n * The dispose event is emitted when this sub directory is deleted.\n *\n * #### Listener signature\n * ```typescript\n * (local: boolean, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `target` - The IDirectory itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryEvents extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IDirectoryEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"containedValueChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(changed: "
                },
                {
                  "kind": "Reference",
                  "text": "IValueChanged",
                  "canonicalReference": "fluid-framework!IValueChanged:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IDirectoryEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"disposed\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IDirectoryNewStorageFormat:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryNewStorageFormat "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryNewStorageFormat",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IDirectoryNewStorageFormat#blobs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blobs: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blobs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IDirectoryNewStorageFormat#content:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content: "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectoryDataObject",
                  "canonicalReference": "fluid-framework!IDirectoryDataObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!IDirectoryOperation:type",
          "docComment": "/**\n * Any operation on a directory\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IDirectoryOperation = "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryStorageOperation",
              "canonicalReference": "fluid-framework!~IDirectoryStorageOperation:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IDirectorySubDirectoryOperation",
              "canonicalReference": "fluid-framework!~IDirectorySubDirectoryOperation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryOperation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IDirectoryValueChanged:interface",
          "docComment": "/**\n * Type of \"valueChanged\" event parameter for SharedDirectory\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDirectoryValueChanged extends "
            },
            {
              "kind": "Reference",
              "text": "IValueChanged",
              "canonicalReference": "fluid-framework!IValueChanged:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDirectoryValueChanged",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IDirectoryValueChanged#path:member",
              "docComment": "/**\n * The absolute path to the IDirectory storing the key which changed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISerializableValue:interface",
          "docComment": "/**\n * The _ready-for-serialization_ format of values contained in DDS contents. This allows us to use ISerializableValue.type to understand whether they're storing a Plain JS object, a SharedObject, or a value type. Note that the in-memory equivalent of ISerializableValue is ILocalValue (similarly holding a type, but with the _in-memory representation_ of the value instead). An ISerializableValue is what gets passed to JSON.stringify and comes out of JSON.parse. This format is used both for snapshots (loadCore/populate) and ops (set). If type is Plain, it must be a plain JS object that can survive a JSON.stringify/parse. E.g. a URL object will just get stringified to a URL string and not rehydrate as a URL object on the other side. It may contain members that are ISerializedHandle (the serialized form of a handle). If type is a value type then it must be amongst the types registered via registerValueType or we won't know how to serialize/deserialize it (we rely on its factory via .load() and .store()). Its value will be type-dependent. If type is Shared, then the in-memory value will just be a reference to the SharedObject. Its value will be a channel ID. This type is legacy and deprecated.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializableValue "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializableValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializableValue#type:member",
              "docComment": "/**\n * A type annotation to help indicate how the value serializes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializableValue#value:member",
              "docComment": "/**\n * The JSONable representation of the value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISerializedValue:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializedValue "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializedValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedValue#type:member",
              "docComment": "/**\n * A type annotation to help indicate how the value serializes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedValue#value:member",
              "docComment": "/**\n * String representation of the value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedDirectory:interface",
          "docComment": "/**\n * Interface describing a shared directory.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedDirectory extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedDirectoryEvents",
              "canonicalReference": "fluid-framework!ISharedDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "IDirectoryEvents",
              "canonicalReference": "fluid-framework!IDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDirectory",
              "canonicalReference": "fluid-framework!IDirectory:interface"
            },
            {
              "kind": "Content",
              "text": ", \"on\" | \"once\" | \"off\"> "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedDirectory",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedDirectory#[Symbol.iterator]:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISharedDirectory#[Symbol.toStringTag]:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedDirectoryEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the directory data. These events only emit on the ISharedDirectory itself, and not on subdirectories.\n *\n * ### \"valueChanged\"\n *\n * The valueChanged event is emitted when a key is set or deleted. This is emitted for any key in the ISharedDirectory or any subdirectory.\n *\n * #### Listener signature\n * ```typescript\n * (\n *     changed: IDirectoryValueChanged,\n *     local: boolean,\n *     op: ISequencedDocumentMessage | null,\n *     target: IEventThisPlaceHolder,\n * ) => void\n * ```\n *\n * - `changed` - Information on the key that changed, its value prior to the change, and the path to the key that changed.\n *\n * - `local` - Whether the change originated from the this client.\n *\n * - `op` - The op that caused the change in value.\n *\n * - `target` - The ISharedDirectory itself.\n *\n * ### \"clear\"\n *\n * The clear event is emitted when the ISharedDirectory is cleared.\n *\n * #### Listener signature\n * ```typescript\n * (local: boolean, op: ISequencedDocumentMessage | null, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `local` - Whether the clear originated from the this client.\n *\n * - `op` - The op that caused the clear.\n *\n * - `target` - The ISharedDirectory itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedDirectoryEvents extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObjectEvents",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObjectEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedDirectoryEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!ISharedDirectoryEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"valueChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(changed: "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectoryValueChanged",
                  "canonicalReference": "fluid-framework!IDirectoryValueChanged:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!ISharedDirectoryEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"clear\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedMap:interface",
          "docComment": "/**\n * Shared map interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedMap extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedMapEvents",
              "canonicalReference": "fluid-framework!ISharedMapEvents:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, any> "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedMap",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedMap#get:member(1)",
              "docComment": "/**\n * Retrieves the given key from the map.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedMap#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The ISharedMap itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "set"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedMapEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the map data.\n *\n * ### \"valueChanged\"\n *\n * The valueChanged event is emitted when a key is set or deleted.\n *\n * #### Listener signature\n * ```typescript\n * (\n *     changed: IValueChanged,\n *     local: boolean,\n *     op: ISequencedDocumentMessage | null,\n *     target: IEventThisPlaceHolder,\n * ) => void\n * ```\n *\n * - `changed` - Information on the key that changed and its value prior to the change.\n *\n * - `local` - Whether the change originated from the this client.\n *\n * - `op` - The op that caused the change in value.\n *\n * - `target` - The map itself.\n *\n * ### \"clear\"\n *\n * The clear event is emitted when the map is cleared.\n *\n * #### Listener signature\n * ```typescript\n * (local: boolean, op: ISequencedDocumentMessage | null, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `local` - Whether the clear originated from the this client.\n *\n * - `op` - The op that caused the clear.\n *\n * - `target` - The map itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedMapEvents extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObjectEvents",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObjectEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedMapEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!ISharedMapEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"valueChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(changed: "
                },
                {
                  "kind": "Reference",
                  "text": "IValueChanged",
                  "canonicalReference": "fluid-framework!IValueChanged:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!ISharedMapEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"clear\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(local: boolean, target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IValueChanged:interface",
          "docComment": "/**\n * Type of \"valueChanged\" event parameter.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IValueChanged "
            }
          ],
          "releaseTag": "Public",
          "name": "IValueChanged",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IValueChanged#key:member",
              "docComment": "/**\n * The key storing the value that changed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IValueChanged#previousValue:member",
              "docComment": "/**\n * The value that was stored at the key prior to the change.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousValue: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!LocalValueMaker:class",
          "docComment": "/**\n * A LocalValueMaker enables a container type DDS to produce and store local values with minimal awareness of how those objects are stored, serialized, and deserialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LocalValueMaker "
            }
          ],
          "releaseTag": "Public",
          "name": "LocalValueMaker",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!LocalValueMaker:constructor(1)",
              "docComment": "/**\n * Create a new LocalValueMaker.\n *\n * @param serializer - The serializer to serialize / parse handles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidSerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!IFluidSerializer:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!LocalValueMaker#fromInMemory:member(1)",
              "docComment": "/**\n * Create a new local value containing a given plain object.\n *\n * @param value - The value to store\n *\n * @returns An ILocalValue containing the value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromInMemory(value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ILocalValue",
                  "canonicalReference": "fluid-framework!ILocalValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromInMemory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!LocalValueMaker#fromSerializable:member(1)",
              "docComment": "/**\n * Create a new local value from an incoming serialized value.\n *\n * @param serializable - The serializable value to make local\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromSerializable(serializable: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializableValue",
                  "canonicalReference": "fluid-framework!ISerializableValue:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ILocalValue",
                  "canonicalReference": "fluid-framework!ILocalValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromSerializable"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!MapFactory:class",
          "docComment": "/**\n * The factory that defines the map.\n *\n * @sealed\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MapFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MapFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!MapFactory#attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!MapFactory.Attributes:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.attributes}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!MapFactory#create:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.create}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedMap",
                  "canonicalReference": "fluid-framework!ISharedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!MapFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedMap",
                  "canonicalReference": "fluid-framework!ISharedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!MapFactory#type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!MapFactory.Type:member",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.\"type\"}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Type = \"https://graph.microsoft.com/types/map\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedDirectory:class",
          "docComment": "/**\n * SharedDirectory provides a hierarchical organization of map-like data structures as SubDirectories. The values stored within can be accessed like a map, and the hierarchy can be navigated using path syntax. SubDirectories can be retrieved for use as working directories.\n *\n * @example\n * ```ts\n * mySharedDirectory.createSubDirectory(\"a\").createSubDirectory(\"b\").createSubDirectory(\"c\").set(\"foo\", val1);\n * const mySubDir = mySharedDirectory.getWorkingDirectory(\"/a/b/c\");\n * mySubDir.get(\"foo\"); // returns val1\n * ```\n *\n * @sealed\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedDirectory extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedDirectoryEvents",
              "canonicalReference": "fluid-framework!ISharedDirectoryEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedDirectory",
              "canonicalReference": "fluid-framework!ISharedDirectory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedDirectory",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Get an iterator over the entries under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedDirectory#[Symbol.toStringTag]:member",
              "docComment": "/**\n * String representation for the class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedDirectory:constructor(1)",
              "docComment": "/**\n * Constructs a new shared directory. If the object is non-local an id and service interfaces will be provided.\n *\n * @param id - String identifier for the SharedDirectory\n *\n * @param runtime - Data store runtime\n *\n * @param type - Type identifier\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedDirectory#absolutePath:member",
              "docComment": "/**\n * The absolute path of the directory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get absolutePath(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "absolutePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#clear:member(1)",
              "docComment": "/**\n * Deletes all keys from within this IDirectory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory.create:member(1)",
              "docComment": "/**\n * Create a new shared directory\n *\n * @param runtime - Data store runtime the new shared directory belongs to\n *\n * @param id - Optional name of the shared directory\n *\n * @returns Newly create shared directory (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedDirectory",
                  "canonicalReference": "fluid-framework!SharedDirectory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#createSubDirectory:member(1)",
              "docComment": "/**\n * Creates an IDirectory child of this IDirectory, or retrieves the existing IDirectory child if one with the same name already exists.\n *\n * @param subdirName - Name of the new child directory to create\n *\n * @returns The IDirectory child that was created or retrieved\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#delete:member(1)",
              "docComment": "/**\n * Deletes the given key from within this IDirectory.\n *\n * @param key - The key to delete\n *\n * @returns True if the key existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#deleteSubDirectory:member(1)",
              "docComment": "/**\n * Deletes an IDirectory child of this IDirectory, if it exists, along with all descendent keys and directories.\n *\n * @param subdirName - Name of the child directory to delete\n *\n * @returns True if the IDirectory existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "deleteSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#dispose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(error?: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedDirectory#disposed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get disposed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#entries:member(1)",
              "docComment": "/**\n * Get an iterator over the entries under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "entries"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#forEach:member(1)",
              "docComment": "/**\n * Issue a callback on each entry under this IDirectory.\n *\n * @param callback - Callback to issue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, key: string, map: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#get:member(1)",
              "docComment": "/**\n * Retrieves the value stored at the given key from the directory.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedDirectory to register with the data store.\n *\n * @returns A factory that creates and load SharedDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#getSubDirectory:member(1)",
              "docComment": "/**\n * Gets an IDirectory child of this IDirectory, if it exists.\n *\n * @param subdirName - Name of the child directory to get\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#getWorkingDirectory:member(1)",
              "docComment": "/**\n * Get an IDirectory within the directory, in order to use relative paths from that location.\n *\n * @param relativePath - Path of the IDirectory to get, relative to this IDirectory\n *\n * @returns The requested IDirectory\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWorkingDirectory(relativePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getWorkingDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#has:member(1)",
              "docComment": "/**\n * Checks whether the given key exists in this IDirectory.\n *\n * @param key - The key to check\n *\n * @returns True if the key exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#hasSubDirectory:member(1)",
              "docComment": "/**\n * Checks whether this directory has a child directory with the given name.\n *\n * @param subdirName - Name of the child directory to check\n *\n * @returns True if it exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasSubDirectory(subdirName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "subdirName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "hasSubDirectory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#keys:member(1)",
              "docComment": "/**\n * Get an iterator over the keys under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "keys"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The IDirectory itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedDirectory#size:member",
              "docComment": "/**\n * The number of entries under this IDirectory.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#subdirectories:member(1)",
              "docComment": "/**\n * Gets an iterator over the IDirectory children of this IDirectory.\n *\n * @returns The IDirectory iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subdirectories(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, "
                },
                {
                  "kind": "Reference",
                  "text": "IDirectory",
                  "canonicalReference": "fluid-framework!IDirectory:interface"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "subdirectories"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedDirectory#values:member(1)",
              "docComment": "/**\n * Get an iterator over the values under this IDirectory.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "values"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedMap:class",
          "docComment": "/**\n * The SharedMap distributed data structure can be used to store key-value pairs. It provides the same API for setting and retrieving values that JavaScript developers are accustomed to with the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map} built-in object. However, the keys of a SharedMap must be strings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedMap extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedMapEvents",
              "canonicalReference": "fluid-framework!ISharedMapEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedMap",
              "canonicalReference": "fluid-framework!ISharedMap:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedMap",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Get an iterator over the entries in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedMap#[Symbol.toStringTag]:member",
              "docComment": "/**\n * String representation for the class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedMap:constructor(1)",
              "docComment": "/**\n * Do not call the constructor. Instead, you should use the {@link SharedMap.create | create method}.\n *\n * @param id - String identifier.\n *\n * @param runtime - Data store runtime.\n *\n * @param attributes - The attributes for the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#clear:member(1)",
              "docComment": "/**\n * Clear all data from the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap.create:member(1)",
              "docComment": "/**\n * Create a new shared map.\n *\n * @param runtime - The data store runtime that the new shared map belongs to.\n *\n * @param id - Optional name of the shared map.\n *\n * @returns Newly created shared map.\n *\n * @example\n *\n * To create a `SharedMap`, call the static create method:\n * ```typescript\n * const myMap = SharedMap.create(this.runtime, id);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedMap",
                  "canonicalReference": "fluid-framework!SharedMap:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#delete:member(1)",
              "docComment": "/**\n * Delete a key from the map.\n *\n * @param key - Key to delete\n *\n * @returns True if the key existed and was deleted, false if it did not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#entries:member(1)",
              "docComment": "/**\n * Get an iterator over the entries in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[string, any]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "entries"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#forEach:member(1)",
              "docComment": "/**\n * Executes the given callback on each entry in the map.\n *\n * @param callbackFn - Callback function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callbackFn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, key: string, map: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callbackFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#get:member(1)",
              "docComment": "/**\n * Retrieves the given key from the map.\n *\n * @param key - Key to retrieve from\n *\n * @returns The stored value, or undefined if the key is not set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedMap to register with the data store.\n *\n * @returns A factory that creates SharedMaps and loads them from storage.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#has:member(1)",
              "docComment": "/**\n * Check if a key exists in the map.\n *\n * @param key - The key to check\n *\n * @returns True if the key exists, false otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#keys:member(1)",
              "docComment": "/**\n * Get an iterator over the keys in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "keys"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#set:member(1)",
              "docComment": "/**\n * Sets the value stored at key to the provided value.\n *\n * @param key - Key to set at\n *\n * @param value - Value to set\n *\n * @returns The ISharedMap itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedMap#size:member",
              "docComment": "/**\n * The number of key/value pairs stored in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedMap#values:member(1)",
              "docComment": "/**\n * Get an iterator over the values in this map.\n *\n * @returns The iterator\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "values"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!DeserializeCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DeserializeCallback = "
            },
            {
              "kind": "Content",
              "text": "(properties: "
            },
            {
              "kind": "Reference",
              "text": "PropertySet",
              "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DeserializeCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IIntervalCollectionEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IIntervalCollectionEvent<TInterval extends "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "IEvent",
              "canonicalReference": "@fluidframework/common-definitions!IEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TInterval",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IIntervalCollectionEvent",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IIntervalCollectionEvent:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"addInterval\" | \"deleteInterval\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(interval: TInterval, local: boolean, op: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!IIntervalCollectionEvent:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"propertyChanged\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(interval: TInterval, propertyArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IIntervalHelpers:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IIntervalHelpers<TInterval extends "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TInterval",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IIntervalHelpers",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IIntervalHelpers#compareEnds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compareEnds(a: "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "compareEnds"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!IIntervalHelpers#create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ", intervalType?: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalType",
                  "canonicalReference": "fluid-framework!IntervalType:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "intervalType",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "create"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IJSONRunSegment:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IJSONRunSegment<T> extends "
            },
            {
              "kind": "Reference",
              "text": "IJSONSegment",
              "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IJSONRunSegment",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!IJSONRunSegment#items:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!Interval:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Interval implements "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Interval",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!Interval:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Interval` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#addProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addProperties(newProps: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ", collaborating?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", seq?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", op?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICombiningOp",
                  "canonicalReference": "@fluidframework/merge-tree!ICombiningOp:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "collaborating",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "seq",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "addProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#addPropertySet:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addPropertySet(props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addPropertySet"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!Interval#auxProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "auxProps: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "auxProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#compare:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(b: "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "compare"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#compareEnd:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compareEnd(b: "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "compareEnd"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#compareStart:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compareStart(b: "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "compareStart"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!Interval#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#getAdditionalPropertySets:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAdditionalPropertySets(): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAdditionalPropertySets"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#getIntervalId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalId(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getIntervalId"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#getProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProperties(): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#modify:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modify(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "modify"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#overlaps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overlaps(b: "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "overlaps"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!Interval#properties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "properties: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!Interval#propertyManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyManager: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertiesManager",
                  "canonicalReference": "@fluidframework/merge-tree!PropertiesManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#serialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize(client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "serialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!Interval#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!Interval#union:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "union(b: "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "union"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!IntervalCollection:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IntervalCollection<TInterval extends "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "@fluidframework/common-utils!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IIntervalCollectionEvent",
              "canonicalReference": "fluid-framework!IIntervalCollectionEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<TInterval>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TInterval",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IntervalCollection",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#[Symbol.iterator]:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollectionIterator",
                  "canonicalReference": "fluid-framework!IntervalCollectionIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!IntervalCollection:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `IntervalCollection` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(helpers: "
                },
                {
                  "kind": "Reference",
                  "text": "IIntervalHelpers",
                  "canonicalReference": "fluid-framework!IIntervalHelpers:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ", requiresClient: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", emitter: "
                },
                {
                  "kind": "Reference",
                  "text": "IValueOpEmitter",
                  "canonicalReference": "fluid-framework!IValueOpEmitter:interface"
                },
                {
                  "kind": "Content",
                  "text": ", serializedIntervals: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "helpers",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "requiresClient",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "emitter",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "serializedIntervals",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#add:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", intervalType: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalType",
                  "canonicalReference": "fluid-framework!IntervalType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "intervalType",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#addConflictResolver:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addConflictResolver(conflictResolver: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalConflictResolver",
                  "canonicalReference": "@fluidframework/merge-tree!IntervalConflictResolver:type"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "conflictResolver",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "addConflictResolver"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#addInternal:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addInternal(serializedInterval: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", op: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializedInterval",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "addInternal"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#attachDeserializer:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachDeserializer(onDeserialize: "
                },
                {
                  "kind": "Reference",
                  "text": "DeserializeCallback",
                  "canonicalReference": "fluid-framework!DeserializeCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "onDeserialize",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "attachDeserializer"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!IntervalCollection#attached:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attached(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attached",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#attachGraph:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachGraph(client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "attachGraph"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#change:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "change(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "change"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#changeInterval:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeInterval(serializedInterval: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", op: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializedInterval",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "changeInterval"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#changeProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeProperties(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "changeProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#CreateBackwardIteratorWithEndPosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreateBackwardIteratorWithEndPosition(endPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollectionIterator",
                  "canonicalReference": "fluid-framework!IntervalCollectionIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "endPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "CreateBackwardIteratorWithEndPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#CreateBackwardIteratorWithStartPosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreateBackwardIteratorWithStartPosition(startPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollectionIterator",
                  "canonicalReference": "fluid-framework!IntervalCollectionIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "startPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "CreateBackwardIteratorWithStartPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#CreateForwardIteratorWithEndPosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreateForwardIteratorWithEndPosition(endPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollectionIterator",
                  "canonicalReference": "fluid-framework!IntervalCollectionIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "endPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "CreateForwardIteratorWithEndPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#CreateForwardIteratorWithStartPosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreateForwardIteratorWithStartPosition(startPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollectionIterator",
                  "canonicalReference": "fluid-framework!IntervalCollectionIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "startPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "CreateForwardIteratorWithStartPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#deleteInterval:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteInterval(serializedInterval: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", op: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializedInterval",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "deleteInterval"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#findOverlappingIntervals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOverlappingIntervals(startPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", endPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "startPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "endPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "findOverlappingIntervals"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#gatherIterationResults:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherIterationResults(results: "
                },
                {
                  "kind": "Content",
                  "text": "TInterval[]"
                },
                {
                  "kind": "Content",
                  "text": ", iteratesForward: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "results",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "iteratesForward",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "gatherIterationResults"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#getIntervalById:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalById(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getIntervalById"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#map:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(interval: TInterval) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#nextInterval:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nextInterval(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "nextInterval"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#previousInterval:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousInterval(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "previousInterval"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#removeIntervalById:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeIntervalById(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TInterval"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeIntervalById"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollection#serializeInternal:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serializeInternal(): "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "serializeInternal"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!IntervalCollectionIterator:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IntervalCollectionIterator<TInterval extends "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TInterval",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IntervalCollectionIterator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!IntervalCollectionIterator:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `IntervalCollectionIterator` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(collection: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ", iteratesForward?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "iteratesForward",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!IntervalCollectionIterator#next:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        value: TInterval;\n        done: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "next"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "fluid-framework!IntervalType:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum IntervalType "
            }
          ],
          "releaseTag": "Public",
          "name": "IntervalType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!IntervalType.Nest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Nest = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Nest",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!IntervalType.Simple:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Simple = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Simple",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!IntervalType.SlideOnRemove:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SlideOnRemove = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "SlideOnRemove",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "fluid-framework!IntervalType.Transient:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Transient = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "Transient",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISequenceDeltaRange:interface",
          "docComment": "/**\n * A range that has changed corresponding to a segment modification.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISequenceDeltaRange<TOperation extends "
            },
            {
              "kind": "Reference",
              "text": "MergeTreeDeltaOperationTypes",
              "canonicalReference": "@fluidframework/merge-tree!MergeTreeDeltaOperationTypes:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "MergeTreeDeltaOperationTypes",
              "canonicalReference": "@fluidframework/merge-tree!MergeTreeDeltaOperationTypes:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TOperation",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ISequenceDeltaRange",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISequenceDeltaRange#operation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operation: "
                },
                {
                  "kind": "Content",
                  "text": "TOperation"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISequenceDeltaRange#position:member",
              "docComment": "/**\n * The index of the start of the range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "position: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "position",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISequenceDeltaRange#propertyDeltas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyDeltas: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyDeltas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISequenceDeltaRange#segment:member",
              "docComment": "/**\n * The segment that corresponds to the range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "segment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISerializableInterval:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializableInterval extends "
            },
            {
              "kind": "Reference",
              "text": "IInterval",
              "canonicalReference": "@fluidframework/merge-tree!IInterval:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializableInterval",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISerializableInterval#addProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addProperties(props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ", collaborating?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", seq?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "collaborating",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "seq",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "addProperties"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISerializableInterval#getIntervalId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalId(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getIntervalId"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializableInterval#properties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "properties: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializableInterval#propertyManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyManager: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertiesManager",
                  "canonicalReference": "@fluidframework/merge-tree!PropertiesManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISerializableInterval#serialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize(client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "serialize"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISerializedInterval:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializedInterval "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializedInterval",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedInterval#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedInterval#intervalType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intervalType: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalType",
                  "canonicalReference": "fluid-framework!IntervalType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "intervalType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedInterval#properties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedInterval#sequenceNumber:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sequenceNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sequenceNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fluid-framework!ISerializedInterval#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedIntervalCollection:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedIntervalCollection<TInterval extends "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TInterval",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ISharedIntervalCollection",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedIntervalCollection#getIntervalCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalCollection(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getIntervalCollection"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedIntervalCollection#waitIntervalCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitIntervalCollection(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "waitIntervalCollection"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedSegmentSequenceEvents:interface",
          "docComment": "/**\n * Events emitted in response to changes to the sequence data.\n *\n * ### \"sequenceDelta\"\n *\n * The sequenceDelta event is emitted when segments are inserted, annotated, or removed.\n *\n * #### Listener signature\n * ```typescript\n * (event: SequenceDeltaEvent, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `event` - Various information on the segments that were modified.\n *\n * - `target` - The sequence itself.\n *\n * ### \"maintenance\"\n *\n * The maintenance event is emitted when segments are modified during merge-tree maintenance.\n *\n * #### Listener signature\n * ```typescript\n * (event: SequenceMaintenanceEvent, target: IEventThisPlaceHolder) => void\n * ```\n *\n * - `event` - Various information on the segments that were modified.\n *\n * - `target` - The sequence itself.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedSegmentSequenceEvents extends "
            },
            {
              "kind": "Reference",
              "text": "ISharedObjectEvents",
              "canonicalReference": "@fluidframework/shared-object-base!ISharedObjectEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedSegmentSequenceEvents",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!ISharedSegmentSequenceEvents:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"sequenceDelta\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceDeltaEvent",
                  "canonicalReference": "fluid-framework!SequenceDeltaEvent:class"
                },
                {
                  "kind": "Content",
                  "text": ", target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "fluid-framework!ISharedSegmentSequenceEvents:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Content",
                  "text": "\"maintenance\""
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(event: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceMaintenanceEvent",
                  "canonicalReference": "fluid-framework!SequenceMaintenanceEvent:class"
                },
                {
                  "kind": "Content",
                  "text": ", target: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventThisPlaceHolder",
                  "canonicalReference": "@fluidframework/common-definitions!IEventThisPlaceHolder:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!ISharedString:interface",
          "docComment": "/**\n * Fluid object interface describing access methods on a SharedString\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISharedString extends "
            },
            {
              "kind": "Reference",
              "text": "SharedSegmentSequence",
              "canonicalReference": "fluid-framework!SharedSegmentSequence:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SharedStringSegment",
              "canonicalReference": "fluid-framework!SharedStringSegment:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ISharedString",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedString#insertMarker:member(1)",
              "docComment": "/**\n * Inserts a marker at the position.\n *\n * @param pos - The position to insert the marker at\n *\n * @param refType - The reference type of the marker\n *\n * @param props - The properties of the marker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMarker(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", refType: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferenceType",
                  "canonicalReference": "@fluidframework/merge-tree!ReferenceType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeInsertMsg",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeInsertMsg:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "refType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertMarker"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedString#insertText:member(1)",
              "docComment": "/**\n * Inserts the text at the position.\n *\n * @param pos - The position to insert the text at\n *\n * @param text - The text to insert\n *\n * @param props - The properties of the text\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertText(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertText"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "fluid-framework!ISharedString#posFromRelativePos:member(1)",
              "docComment": "/**\n * Given a position specified relative to a marker id, lookup the marker and convert the position to a character position.\n *\n * @param relativePos - Id of marker (may be indirect) and whether position is before or after marker.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "posFromRelativePos(relativePos: "
                },
                {
                  "kind": "Reference",
                  "text": "IRelativePosition",
                  "canonicalReference": "@fluidframework/merge-tree!IRelativePosition:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "posFromRelativePos"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "fluid-framework!IValueOpEmitter:interface",
          "docComment": "/**\n * Value types are given an IValueOpEmitter to emit their ops through the container type that holds them.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IValueOpEmitter "
            }
          ],
          "releaseTag": "Public",
          "name": "IValueOpEmitter",
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!MatrixSegment:type",
          "docComment": "/**\n * @deprecated\n *\n * MatrixSegment is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MatrixSegment = "
            },
            {
              "kind": "Reference",
              "text": "RunSegment",
              "canonicalReference": "fluid-framework!RunSegment:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PaddingSegment",
              "canonicalReference": "fluid-framework!PaddingSegment:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MatrixSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "fluid-framework!maxCellPosition:var",
          "docComment": "/**\n * @deprecated\n *\n * maxCellPosition is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "maxCellPosition: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "releaseTag": "Public",
          "name": "maxCellPosition",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "fluid-framework!maxCol:var",
          "docComment": "/**\n * @deprecated\n *\n * maxCol is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "maxCol = 2097152"
            }
          ],
          "releaseTag": "Public",
          "name": "maxCol",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "fluid-framework!maxCols:var",
          "docComment": "/**\n * @deprecated\n *\n * maxCols is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "maxCols: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "releaseTag": "Public",
          "name": "maxCols",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "fluid-framework!maxRow:var",
          "docComment": "/**\n * @deprecated\n *\n * maxRow is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "maxRow = 4294967295"
            }
          ],
          "releaseTag": "Public",
          "name": "maxRow",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "fluid-framework!maxRows:var",
          "docComment": "/**\n * @deprecated\n *\n * maxRows is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "maxRows: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "releaseTag": "Public",
          "name": "maxRows",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!PaddingSegment:class",
          "docComment": "/**\n * An empty segment that occupies 'cachedLength' positions. SparseMatrix uses PaddingSegment to \"pad\" a run of unoccupied cells.\n *\n * @deprecated\n *\n * PaddingSegment is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PaddingSegment extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSegment",
              "canonicalReference": "@fluidframework/merge-tree!BaseSegment:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PaddingSegment",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!PaddingSegment:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PaddingSegment` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "size",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#append:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "append(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "append"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#canAppend:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canAppend(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "canAppend"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PaddingSegment",
                  "canonicalReference": "fluid-framework!PaddingSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#createSplitSegmentAt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected createSplitSegmentAt(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PaddingSegment",
                  "canonicalReference": "fluid-framework!PaddingSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createSplitSegmentAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment.fromJSONObject:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromJSONObject(spec: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PaddingSegment",
                  "canonicalReference": "fluid-framework!PaddingSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromJSONObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment.is:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static is(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "segment",
                  "canonicalReference": "fluid-framework!~segment"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "PaddingSegment",
                  "canonicalReference": "fluid-framework!PaddingSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "is"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#removeRange:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#toJSONObject:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSONObject(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        pad: number;\n        props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toJSONObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!PaddingSegment#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!PaddingSegment#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type = \"PaddingSegment\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!PaddingSegment.typeString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly typeString = \"PaddingSegment\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "typeString",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "fluid-framework!positionToRowCol:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * positionToRowCol is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function positionToRowCol(position: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    row: number;\n    col: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "position",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "positionToRowCol"
        },
        {
          "kind": "Variable",
          "canonicalReference": "fluid-framework!rowColToPosition:var",
          "docComment": "/**\n * @deprecated\n *\n * positionToRowCol is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "rowColToPosition: "
            },
            {
              "kind": "Content",
              "text": "(row: number, col: number) => number"
            }
          ],
          "releaseTag": "Public",
          "name": "rowColToPosition",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!RunSegment:class",
          "docComment": "/**\n * @deprecated\n *\n * RunSegment is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RunSegment extends "
            },
            {
              "kind": "Reference",
              "text": "SubSequence",
              "canonicalReference": "fluid-framework!SubSequence:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SparseMatrixItem",
              "canonicalReference": "fluid-framework!SparseMatrixItem:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "RunSegment",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!RunSegment:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RunSegment` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(items: "
                },
                {
                  "kind": "Reference",
                  "text": "SparseMatrixItem",
                  "canonicalReference": "fluid-framework!SparseMatrixItem:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment#append:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "append(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "append"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RunSegment",
                  "canonicalReference": "fluid-framework!RunSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment#createSplitSegmentAt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected createSplitSegmentAt(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RunSegment",
                  "canonicalReference": "fluid-framework!RunSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createSplitSegmentAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment.fromJSONObject:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromJSONObject(spec: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RunSegment",
                  "canonicalReference": "fluid-framework!RunSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromJSONObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment#getTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTag(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTag"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment.is:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static is(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "segment",
                  "canonicalReference": "fluid-framework!~segment"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "RunSegment",
                  "canonicalReference": "fluid-framework!RunSegment:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "is"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!RunSegment#items:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Reference",
                  "text": "SparseMatrixItem",
                  "canonicalReference": "fluid-framework!SparseMatrixItem:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment#removeRange:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!RunSegment#setTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTag(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", tag: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setTag"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!RunSegment#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type = \"RunSegment\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!RunSegment.typeString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly typeString = \"RunSegment\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "typeString",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SequenceDeltaEvent:class",
          "docComment": "/**\n * The event object returned on sequenceDelta events.\n *\n * The properties of this object and its sub-objects represent a point in time state at the time the operation was applied. They will not take into consideration any future modifications performed to the underlying sequence and merge tree.\n *\n * For group ops, each op will get it's own event, and the group op property will be set on the op args.\n *\n * Ops may get multiple events. For instance, an insert-replace will get a remove then an insert event.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SequenceDeltaEvent extends "
            },
            {
              "kind": "Reference",
              "text": "SequenceEvent",
              "canonicalReference": "fluid-framework!SequenceEvent:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MergeTreeDeltaOperationType",
              "canonicalReference": "@fluidframework/merge-tree!MergeTreeDeltaOperationType:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "SequenceDeltaEvent",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SequenceDeltaEvent:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SequenceDeltaEvent` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(opArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaOpArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaOpArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", deltaArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaCallbackArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaCallbackArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", mergeTreeClient: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "deltaArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "mergeTreeClient",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceDeltaEvent#isLocal:member",
              "docComment": "/**\n * Whether the event was caused by a locally-made change.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isLocal: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLocal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceDeltaEvent#opArgs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly opArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaOpArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaOpArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "opArgs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SequenceEvent:class",
          "docComment": "/**\n * Base class for SequenceDeltaEvent and SequenceMaintenanceEvent.\n *\n * The properties of this object and its sub-objects represent a point in time state at the time the operation was applied. They will not take into any future modifications performed to the underlying sequence and merge tree.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class SequenceEvent<TOperation extends "
            },
            {
              "kind": "Reference",
              "text": "MergeTreeDeltaOperationTypes",
              "canonicalReference": "@fluidframework/merge-tree!MergeTreeDeltaOperationTypes:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "MergeTreeDeltaOperationTypes",
              "canonicalReference": "@fluidframework/merge-tree!MergeTreeDeltaOperationTypes:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TOperation",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "SequenceEvent",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SequenceEvent:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SequenceEvent` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(deltaArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaCallbackArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaCallbackArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TOperation>"
                },
                {
                  "kind": "Content",
                  "text": ", mergeTreeClient: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "deltaArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "mergeTreeClient",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#clientId:member",
              "docComment": "/**\n * The client id of the client that made the change which caused the delta event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get clientId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#deltaArgs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly deltaArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaCallbackArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaCallbackArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TOperation>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deltaArgs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#deltaOperation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly deltaOperation: "
                },
                {
                  "kind": "Content",
                  "text": "TOperation"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deltaOperation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#first:member",
              "docComment": "/**\n * The first of the modified ranges. Undefined if delta is empty, like in the case where a delete comes in for a previously deleted range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get first(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISequenceDeltaRange",
                  "canonicalReference": "fluid-framework!ISequenceDeltaRange:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TOperation>> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "first",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#isEmpty:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isEmpty: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isEmpty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#last:member",
              "docComment": "/**\n * The last of the modified ranges. Undefined if delta is empty, like in the case where a delete comes in for a previously deleted range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get last(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISequenceDeltaRange",
                  "canonicalReference": "fluid-framework!ISequenceDeltaRange:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TOperation>> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "last",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceEvent#ranges:member",
              "docComment": "/**\n * The in-order ranges affected by this delta. These may not be continuos.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ranges(): "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISequenceDeltaRange",
                  "canonicalReference": "fluid-framework!ISequenceDeltaRange:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TOperation>>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ranges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SequenceInterval:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SequenceInterval implements "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SequenceInterval",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SequenceInterval:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SequenceInterval` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(start: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": ", intervalType: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalType",
                  "canonicalReference": "fluid-framework!IntervalType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "intervalType",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#addProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addProperties(newProps: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ", collab?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", seq?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", op?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICombiningOp",
                  "canonicalReference": "@fluidframework/merge-tree!ICombiningOp:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "collab",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "seq",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "addProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#compare:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compare(b: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "compare"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#compareEnd:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compareEnd(b: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "compareEnd"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#compareStart:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compareStart(b: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "compareStart"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceInterval#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#getIntervalId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalId(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getIntervalId"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceInterval#intervalType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intervalType: "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalType",
                  "canonicalReference": "fluid-framework!IntervalType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "intervalType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#modify:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modify(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "modify"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#overlaps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overlaps(b: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "overlaps"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#overlapsPos:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overlapsPos(bstart: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", bend: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bstart",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "bend",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "overlapsPos"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceInterval#properties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "properties: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceInterval#propertyManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propertyManager: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertiesManager",
                  "canonicalReference": "@fluidframework/merge-tree!PropertiesManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propertyManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#serialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize(client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedInterval",
                  "canonicalReference": "fluid-framework!ISerializedInterval:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "serialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceInterval#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SequenceInterval#union:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "union(b: "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "union"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SequenceMaintenanceEvent:class",
          "docComment": "/**\n * The event object returned on maintenance events.\n *\n * The properties of this object and its sub-objects represent a point in time state at the time the operation was applied. They will not take into any future modifications performed to the underlying sequence and merge tree.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SequenceMaintenanceEvent extends "
            },
            {
              "kind": "Reference",
              "text": "SequenceEvent",
              "canonicalReference": "fluid-framework!SequenceEvent:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MergeTreeMaintenanceType",
              "canonicalReference": "@fluidframework/merge-tree!MergeTreeMaintenanceType:enum"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "SequenceMaintenanceEvent",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SequenceMaintenanceEvent:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SequenceMaintenanceEvent` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(opArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaOpArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaOpArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", deltaArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeMaintenanceCallbackArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeMaintenanceCallbackArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", mergeTreeClient: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "deltaArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "mergeTreeClient",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SequenceMaintenanceEvent#opArgs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly opArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeDeltaOpArgs",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeDeltaOpArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "opArgs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedIntervalCollection:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedIntervalCollection<TInterval extends "
            },
            {
              "kind": "Reference",
              "text": "ISerializableInterval",
              "canonicalReference": "fluid-framework!ISerializableInterval:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Interval",
              "canonicalReference": "fluid-framework!Interval:class"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedIntervalCollection",
              "canonicalReference": "fluid-framework!ISharedIntervalCollection:interface"
            },
            {
              "kind": "Content",
              "text": "<TInterval> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TInterval",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "SharedIntervalCollection",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#[Symbol.toStringTag]:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedIntervalCollection:constructor(1)",
              "docComment": "/**\n * Constructs a new shared SharedIntervalCollection. If the object is non-local an id and service interfaces will be provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#applyStashedOp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyStashedOp(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "applyStashedOp"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection.create:member(1)",
              "docComment": "/**\n * Create a SharedIntervalCollection\n *\n * @param runtime - data store runtime the new shared map belongs to\n *\n * @param id - optional name of the shared map\n *\n * @returns newly create shared map (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedIntervalCollection",
                  "canonicalReference": "fluid-framework!SharedIntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Interval",
                  "canonicalReference": "fluid-framework!Interval:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedIntervalCollection to register with the data store.\n *\n * @returns a factory that creates and load SharedIntervalCollection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#getIntervalCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalCollection(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getIntervalCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#getIntervalCollectionPath:member(1)",
              "docComment": "/**\n * Creates the full path of the intervalCollection label\n *\n * @param label - the incoming label\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getIntervalCollectionPath(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getIntervalCollectionPath"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#loadCore:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/shared-object-base#SharedObject.loadCore}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected loadCore(storage: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelStorageService",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "storage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "loadCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#onDisconnect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDisconnect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onDisconnect"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#processCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected processCore(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "processCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#reSubmitCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected reSubmitCore(content: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "reSubmitCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#summarizeCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected summarizeCore(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidSerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!IFluidSerializer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISummaryTreeWithStats",
                  "canonicalReference": "@fluidframework/runtime-definitions!ISummaryTreeWithStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "summarizeCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollection#waitIntervalCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitIntervalCollection(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TInterval>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "waitIntervalCollection"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "implementsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory:class",
          "docComment": "/**\n * The factory that defines the SharedIntervalCollection\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedIntervalCollectionFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedIntervalCollectionFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory#attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory.Attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory#create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedIntervalCollection",
                  "canonicalReference": "fluid-framework!SharedIntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SharedIntervalCollection",
                  "canonicalReference": "fluid-framework!SharedIntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedIntervalCollectionFactory.Type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Type = \"https://graph.microsoft.com/types/sharedIntervalCollection\";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedNumberSequence:class",
          "docComment": "/**\n * The SharedNumberSequence holds a sequence of numbers. Each number will be stored at a position within the sequence. See the {@link https://fluidframework.com/docs/data-structures/sequences/ | sequence documentation} for details on working with sequences.\n *\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedNumberSequence extends "
            },
            {
              "kind": "Reference",
              "text": "SharedSequence",
              "canonicalReference": "fluid-framework!SharedSequence:class"
            },
            {
              "kind": "Content",
              "text": "<number> "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedNumberSequence",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedNumberSequence:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SharedNumberSequence` class\n *\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedNumberSequence.create:member(1)",
              "docComment": "/**\n * Create a new shared number sequence\n *\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n *\n * @param runtime - data store runtime the new shared number sequence belongs to\n *\n * @param id - optional name of the shared number sequence\n *\n * @returns newly create shared number sequence (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedNumberSequence",
                  "canonicalReference": "fluid-framework!SharedNumberSequence:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedNumberSequence.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedNumberSequence to register with the data store.\n *\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n *\n * @returns a factory that creates and load SharedNumberSequence\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedNumberSequenceFactory",
                  "canonicalReference": "fluid-framework!SharedNumberSequenceFactory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedNumberSequence#getRange:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getRange"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedNumberSequence#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedNumberSequenceFactory:class",
          "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedNumberSequenceFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedNumberSequenceFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory#attributes:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory.Attributes:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory#create:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedObject",
                  "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory#load:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedObject",
                  "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory.segmentFromSpec:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static segmentFromSpec(segSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONSegment",
                  "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SubSequence",
                  "canonicalReference": "fluid-framework!SubSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "segmentFromSpec"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory#type:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedNumberSequenceFactory.Type:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedNumberSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedObjectSequence:class",
          "docComment": "/**\n * The SharedObjectSequence holds a sequence of serializable objects. Each object will be stored at a position within the sequence. See the {@link https://fluidframework.com/docs/data-structures/sequences/ | sequence documentation} for details on working with sequences.\n *\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedObjectSequence<T> extends "
            },
            {
              "kind": "Reference",
              "text": "SharedSequence",
              "canonicalReference": "fluid-framework!SharedSequence:class"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SharedObjectSequence",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedObjectSequence:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SharedObjectSequence` class\n *\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedObjectSequence.create:member(1)",
              "docComment": "/**\n * Create a new shared object sequence\n *\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n *\n * @param runtime - data store runtime the new shared object sequence belongs to\n *\n * @param id - optional name of the shared object sequence\n *\n * @returns newly create shared object sequence (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create<T>(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedObjectSequence",
                  "canonicalReference": "fluid-framework!SharedObjectSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedObjectSequence.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedObjectSequence to register with the data store.\n *\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n *\n * @returns a factory that creates and load SharedObjectSequence\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedObjectSequenceFactory",
                  "canonicalReference": "fluid-framework!SharedObjectSequenceFactory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedObjectSequence#getRange:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getRange"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedObjectSequence#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedObjectSequenceFactory:class",
          "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedObjectSequenceFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedObjectSequenceFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory#attributes:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory.Attributes:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory#create:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedObject",
                  "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory#load:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedObject",
                  "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory.segmentFromSpec:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static segmentFromSpec(segSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONSegment",
                  "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SubSequence",
                  "canonicalReference": "fluid-framework!SubSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<object>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "segmentFromSpec"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory#type:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedObjectSequenceFactory.Type:member",
              "docComment": "/**\n * @deprecated\n *\n * SharedObjectSequence is not recommended for use and will be removed in an upcoming release. For more info, please see [Github issue 8526](https://github.com/microsoft/FluidFramework/issues/8526)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedSegmentSequence:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class SharedSegmentSequence<T extends "
            },
            {
              "kind": "Reference",
              "text": "ISegment",
              "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "SharedObject",
              "canonicalReference": "@fluidframework/shared-object-base!SharedObject:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISharedSegmentSequenceEvents",
              "canonicalReference": "fluid-framework!ISharedSegmentSequenceEvents:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedIntervalCollection",
              "canonicalReference": "fluid-framework!ISharedIntervalCollection:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SequenceInterval",
              "canonicalReference": "fluid-framework!SequenceInterval:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SharedSegmentSequence",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedSegmentSequence:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SharedSegmentSequence` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(dataStoreRuntime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ", segmentFromSpec: "
                },
                {
                  "kind": "Content",
                  "text": "(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONSegment",
                  "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataStoreRuntime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "segmentFromSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#addLocalReference:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addLocalReference(lref: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lref",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addLocalReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#annotateRange:member(1)",
              "docComment": "/**\n * Annotates the range with the provided properties\n *\n * @param start - The inclusive start position of the range to annotate\n *\n * @param end - The exclusive end position of the range to annotate\n *\n * @param props - The properties to annotate the range with\n *\n * @param combiningOp - Optional. Specifies how to combine values for the property, such as \"incr\" for increment.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "annotateRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ", combiningOp?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICombiningOp",
                  "canonicalReference": "@fluidframework/merge-tree!ICombiningOp:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "combiningOp",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "annotateRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#applyStashedOp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyStashedOp(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "applyStashedOp"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#client:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected client: "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@fluidframework/merge-tree!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "client",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#createPositionReference:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createPositionReference(segment: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", refType: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferenceType",
                  "canonicalReference": "@fluidframework/merge-tree!ReferenceType:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "refType",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "createPositionReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#didAttach:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected didAttach(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "didAttach"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getContainingSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContainingSegment(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        segment: T;\n        offset: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getContainingSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getCurrentSeq:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentSeq(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCurrentSeq"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getIntervalCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIntervalCollection(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getIntervalCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getLength:member(1)",
              "docComment": "/**\n * Returns the length of the current sequence for the client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLength(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getLength"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getPosition:member(1)",
              "docComment": "/**\n * Returns the current position of a segment, and -1 if the segment does not exist in this sequence\n *\n * @param segment - The segment to get the position of\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPosition(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getPropertiesAtPosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPropertiesAtPosition(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getPropertiesAtPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getRangeExtentsOfPosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRangeExtentsOfPosition(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        posStart: number;\n        posAfterEnd: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getRangeExtentsOfPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#getStackContext:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStackContext(startPos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", rangeLabels: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RangeStackMap",
                  "canonicalReference": "@fluidframework/merge-tree!RangeStackMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "startPos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "rangeLabels",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getStackContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#groupOperation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupOperation(groupOp: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeGroupMsg",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeGroupMsg:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "groupOp",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "groupOperation"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#initializeLocalCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected initializeLocalCore(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "initializeLocalCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#insertAtReferencePosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertAtReferencePosition(pos: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferencePosition",
                  "canonicalReference": "@fluidframework/merge-tree!ReferencePosition:interface"
                },
                {
                  "kind": "Content",
                  "text": ", segment: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "insertAtReferencePosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#loadCore:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/shared-object-base#SharedObject.loadCore}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected loadCore(storage: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelStorageService",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelStorageService:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "storage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "loadCore"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#loaded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get loaded(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loaded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#loadedDeferred:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected loadedDeferred: "
                },
                {
                  "kind": "Reference",
                  "text": "Deferred",
                  "canonicalReference": "@fluidframework/common-utils!Deferred:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadedDeferred",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#localRefToPos:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localRefToPos(localRef: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "localRef",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "localRefToPos"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#onConnect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onConnect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onConnect"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#onDisconnect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDisconnect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onDisconnect"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#posFromRelativePos:member(1)",
              "docComment": "/**\n * Given a position specified relative to a marker id, lookup the marker and convert the position to a character position.\n *\n * @param relativePos - Id of marker (may be indirect) and whether position is before or after marker.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "posFromRelativePos(relativePos: "
                },
                {
                  "kind": "Reference",
                  "text": "IRelativePosition",
                  "canonicalReference": "@fluidframework/merge-tree!IRelativePosition:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "posFromRelativePos"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#processCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected processCore(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequencedDocumentMessage",
                  "canonicalReference": "@fluidframework/protocol-definitions!ISequencedDocumentMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "local",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "processCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#processGCDataCore:member(1)",
              "docComment": "/**\n * Runs serializer over the GC data for this SharedMatrix. All the IFluidHandle's represent routes to other objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected processGCDataCore(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "SummarySerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!SummarySerializer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processGCDataCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#removeLocalReference:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeLocalReference(lref: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalReference",
                  "canonicalReference": "@fluidframework/merge-tree!LocalReference:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lref",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeLocalReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#removeRange:member(1)",
              "docComment": "/**\n * @param start - The inclusive start of the range to remove\n *\n * @param end - The exclusive end of the range to remove\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeRemoveMsg",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeRemoveMsg:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#replaceRange:member(1)",
              "docComment": "/**\n * Replace the range specified from start to end with the provided segment This is done by inserting the segment at the end of the range, followed by removing the contents of the range For a zero or reverse range (start \\>= end), insert at end do not remove anything\n *\n * @param start - The start of the range to replace\n *\n * @param end - The end of the range to replace\n *\n * @param segment - The segment that will replace the range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected replaceRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "replaceRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#resolveRemoteClientPosition:member(1)",
              "docComment": "/**\n * Resolves a remote client's position against the local sequence and returns the remote client's position relative to the local sequence. The client ref seq must be above the minimum sequence number or the return value will be undefined. Generally this method is used in conjunction with signals which provide point in time values for the below parameters, and is useful for things like displaying user position. It should not be used with persisted values as persisted values will quickly become invalid as the remoteClientRefSeq moves below the minimum sequence number\n *\n * @param remoteClientPosition - The remote client's position to resolve\n *\n * @param remoteClientRefSeq - The reference sequence number of the remote client\n *\n * @param remoteClientId - The client id of the remote client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolveRemoteClientPosition(remoteClientPosition: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", remoteClientRefSeq: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", remoteClientId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "remoteClientPosition",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "remoteClientRefSeq",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "remoteClientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "resolveRemoteClientPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#reSubmitCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected reSubmitCore(content: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", localOpMetadata: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "localOpMetadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "reSubmitCore"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#segmentFromSpec:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly segmentFromSpec: "
                },
                {
                  "kind": "Content",
                  "text": "(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONSegment",
                  "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "segmentFromSpec",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#submitSequenceMessage:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitSequenceMessage(message: "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeOp",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeOp:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "submitSequenceMessage"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#summarizeCore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected summarizeCore(serializer: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidSerializer",
                  "canonicalReference": "@fluidframework/shared-object-base!IFluidSerializer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISummaryTreeWithStats",
                  "canonicalReference": "@fluidframework/runtime-definitions!ISummaryTreeWithStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "summarizeCore"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#waitIntervalCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitIntervalCollection(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IntervalCollection",
                  "canonicalReference": "fluid-framework!IntervalCollection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SequenceInterval",
                  "canonicalReference": "fluid-framework!SequenceInterval:class"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "waitIntervalCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSegmentSequence#walkSegments:member(1)",
              "docComment": "/**\n * Walk the underlying segments of the sequence. The walked segments may extend beyond the range if the segments cross the ranges start or end boundaries. Set split range to true to ensure only segments within the range are walked.\n *\n * @param handler - The function to handle each segment\n *\n * @param start - Optional. The start of range walk.\n *\n * @param end - Optional. The end of range walk\n *\n * @param accum - Optional. An object that will be passed to the handler for accumulation\n *\n * @param splitRange - Optional. Splits boundary segments on the range boundaries\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "walkSegments<TClientData>(handler: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegmentAction",
                  "canonicalReference": "@fluidframework/merge-tree!ISegmentAction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TClientData>"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", accum?: "
                },
                {
                  "kind": "Content",
                  "text": "TClientData"
                },
                {
                  "kind": "Content",
                  "text": ", splitRange?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "accum",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "splitRange",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TClientData",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "walkSegments"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "implementsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedSequence:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedSequence<T> extends "
            },
            {
              "kind": "Reference",
              "text": "SharedSegmentSequence",
              "canonicalReference": "fluid-framework!SharedSegmentSequence:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SubSequence",
              "canonicalReference": "fluid-framework!SubSequence:class"
            },
            {
              "kind": "Content",
              "text": "<T>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SharedSequence",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedSequence:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SharedSequence` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ", specToSegment: "
                },
                {
                  "kind": "Content",
                  "text": "(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONSegment",
                  "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "specToSegment",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSequence#getItemCount:member(1)",
              "docComment": "/**\n * Returns the total count of items in the sequence\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItemCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getItemCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSequence#getItems:member(1)",
              "docComment": "/**\n * Gets the items in the specified range\n *\n * @param start - The inclusive start of the range\n *\n * @param end - The exclusive end of the range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItems(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getItems"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedSequence#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSequence#insert:member(1)",
              "docComment": "/**\n * @param pos - The position to insert the items at.\n *\n * @param items - The items to insert.\n *\n * @param props - Optional. Properties to set on the inserted items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", items: "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "name": "insert"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedSequence#remove:member(1)",
              "docComment": "/**\n * @param start - The inclusive start of the range to remove\n *\n * @param end - The exclusive end of the range to remove\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "remove"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedString:class",
          "docComment": "/**\n * The Shared String is a specialized data structure for handling collaborative text. It is based on a more general Sequence data structure but has additional features that make working with text easier.\n *\n * In addition to text, a Shared String can also contain markers. Markers can be used to store metadata at positions within the text, like the details of an image or Fluid object that should be rendered with the text.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedString extends "
            },
            {
              "kind": "Reference",
              "text": "SharedSegmentSequence",
              "canonicalReference": "fluid-framework!SharedSegmentSequence:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SharedStringSegment",
              "canonicalReference": "fluid-framework!SharedStringSegment:type"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ISharedString",
              "canonicalReference": "fluid-framework!ISharedString:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedString",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SharedString:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SharedString` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#annotateMarker:member(1)",
              "docComment": "/**\n * Annotates the marker with the provided properties.\n *\n * @param marker - The marker to annotate\n *\n * @param props - The properties to annotate the marker with\n *\n * @param combiningOp - Optional. Specifies how to combine values for the property, such as \"incr\" for increment.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "annotateMarker(marker: "
                },
                {
                  "kind": "Reference",
                  "text": "Marker",
                  "canonicalReference": "@fluidframework/merge-tree!Marker:class"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ", combiningOp?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICombiningOp",
                  "canonicalReference": "@fluidframework/merge-tree!ICombiningOp:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "marker",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "combiningOp",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "annotateMarker"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#annotateMarkerNotifyConsensus:member(1)",
              "docComment": "/**\n * Annotates the marker with the provided properties and calls the callback on consensus.\n *\n * @param marker - The marker to annotate\n *\n * @param props - The properties to annotate the marker with\n *\n * @param consensusCallback - The callback called when consensus is reached\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "annotateMarkerNotifyConsensus(marker: "
                },
                {
                  "kind": "Reference",
                  "text": "Marker",
                  "canonicalReference": "@fluidframework/merge-tree!Marker:class"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Marker",
                  "canonicalReference": "@fluidframework/merge-tree!Marker:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "marker",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  }
                }
              ],
              "name": "annotateMarkerNotifyConsensus"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString.create:member(1)",
              "docComment": "/**\n * Create a new shared string.\n *\n * @param runtime - data store runtime the new shared string belongs to\n *\n * @param id - optional name of the shared string\n *\n * @returns newly create shared string (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedString",
                  "canonicalReference": "fluid-framework!SharedString:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#findTile:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findTile(startPos: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", tileLabel: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", preceding?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        tile: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferencePosition",
                  "canonicalReference": "@fluidframework/merge-tree!ReferencePosition:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        pos: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "startPos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tileLabel",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "preceding",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "findTile"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedString to register with the data store.\n *\n * @returns a factory that creates and load SharedString\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStringFactory",
                  "canonicalReference": "fluid-framework!SharedStringFactory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#getMarkerFromId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMarkerFromId(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getMarkerFromId"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#getText:member(1)",
              "docComment": "/**\n * Retrieve text from the SharedString in string format.\n *\n * @param start - The starting index of the text to retrieve, or 0 if omitted.\n *\n * @param end - The ending index of the text to retrieve, or the end of the string if omitted\n *\n * @returns The requested text content as a string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getText(start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getText"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#getTextAndMarkers:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTextAndMarkers(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        parallelText: string[];\n        parallelMarkers: "
                },
                {
                  "kind": "Reference",
                  "text": "Marker",
                  "canonicalReference": "@fluidframework/merge-tree!Marker:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTextAndMarkers"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#getTextRangeWithMarkers:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTextRangeWithMarkers(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTextRangeWithMarkers"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#getTextRangeWithPlaceholders:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTextRangeWithPlaceholders(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTextRangeWithPlaceholders"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#getTextWithPlaceholders:member(1)",
              "docComment": "/**\n * Adds spaces for markers and handles, so that position calculations account for them.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTextWithPlaceholders(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTextWithPlaceholders"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedString#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#insertMarker:member(1)",
              "docComment": "/**\n * Inserts a marker at the position.\n *\n * @param pos - The position to insert the marker at\n *\n * @param refType - The reference type of the marker\n *\n * @param props - The properties of the marker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMarker(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", refType: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferenceType",
                  "canonicalReference": "@fluidframework/merge-tree!ReferenceType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeInsertMsg",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeInsertMsg:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "refType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertMarker"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#insertMarkerRelative:member(1)",
              "docComment": "/**\n * Inserts a marker at a relative position.\n *\n * @param relativePos1 - The relative position to insert the marker at\n *\n * @param refType - The reference type of the marker\n *\n * @param props - The properties of the marker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMarkerRelative(relativePos1: "
                },
                {
                  "kind": "Reference",
                  "text": "IRelativePosition",
                  "canonicalReference": "@fluidframework/merge-tree!IRelativePosition:interface"
                },
                {
                  "kind": "Content",
                  "text": ", refType: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferenceType",
                  "canonicalReference": "@fluidframework/merge-tree!ReferenceType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePos1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "refType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertMarkerRelative"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#insertText:member(1)",
              "docComment": "/**\n * Inserts the text at the position.\n *\n * @param pos - The position to insert the text at\n *\n * @param text - The text to insert\n *\n * @param props - The properties of the text\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertText(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertText"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#insertTextRelative:member(1)",
              "docComment": "/**\n * Inserts the text at the position.\n *\n * @param relativePos1 - The relative position to insert the text at\n *\n * @param text - The text to insert\n *\n * @param props - The properties of text\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertTextRelative(relativePos1: "
                },
                {
                  "kind": "Reference",
                  "text": "IRelativePosition",
                  "canonicalReference": "@fluidframework/merge-tree!IRelativePosition:interface"
                },
                {
                  "kind": "Content",
                  "text": ", text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "relativePos1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertTextRelative"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedString#ISharedString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ISharedString(): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedString",
                  "canonicalReference": "fluid-framework!ISharedString:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ISharedString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#removeText:member(1)",
              "docComment": "/**\n * Removes the text in the given range.\n *\n * @param start - The inclusive start of the range to remove\n *\n * @param end - The exclusive end of the range to replace\n *\n * @returns the message sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeText(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IMergeTreeRemoveMsg",
                  "canonicalReference": "@fluidframework/merge-tree!IMergeTreeRemoveMsg:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeText"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedString#replaceText:member(1)",
              "docComment": "/**\n * Replaces a range with the provided text.\n *\n * @param start - The inclusive start of the range to replace\n *\n * @param end - The exclusive end of the range to replace\n *\n * @param text - The text to replace the range with\n *\n * @param props - Optional. The properties of the replacement text\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceText(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "replaceText"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SharedStringFactory:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedStringFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedStringFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedStringFactory#attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedStringFactory.Attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedStringFactory#create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedString",
                  "canonicalReference": "fluid-framework!SharedString:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedStringFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SharedString",
                  "canonicalReference": "fluid-framework!SharedString:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SharedStringFactory.segmentFromSpec:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static segmentFromSpec(spec: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStringSegment",
                  "canonicalReference": "fluid-framework!SharedStringSegment:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "segmentFromSpec"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedStringFactory#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SharedStringFactory.Type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!SharedStringSegment:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SharedStringSegment = "
            },
            {
              "kind": "Reference",
              "text": "TextSegment",
              "canonicalReference": "@fluidframework/merge-tree!TextSegment:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Marker",
              "canonicalReference": "@fluidframework/merge-tree!Marker:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SharedStringSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SparseMatrix:class",
          "docComment": "/**\n * @deprecated\n *\n * SparseMatrix is an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SparseMatrix extends "
            },
            {
              "kind": "Reference",
              "text": "SharedSegmentSequence",
              "canonicalReference": "fluid-framework!SharedSegmentSequence:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MatrixSegment",
              "canonicalReference": "fluid-framework!MatrixSegment:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "SparseMatrix",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SparseMatrix:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SparseMatrix` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#annotatePosition:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "annotatePosition(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "annotatePosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix.create:member(1)",
              "docComment": "/**\n * Create a new sparse matrix\n *\n * @param runtime - data store runtime the new sparse matrix belongs to\n *\n * @param id - optional name of the sparse matrix\n *\n * @returns newly create sparse matrix (but not attached yet)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SparseMatrix",
                  "canonicalReference": "fluid-framework!SparseMatrix:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix.getFactory:member(1)",
              "docComment": "/**\n * Get a factory for SharedMap to register with the data store.\n *\n * @returns a factory that creates and load SharedMap\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getFactory(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelFactory",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFactory"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#getItem:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getItem(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Jsonable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Jsonable:type"
                },
                {
                  "kind": "Content",
                  "text": "<string | number | boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidHandle",
                  "canonicalReference": "@fluidframework/core-interfaces!IFluidHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getItem"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#getPositionProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPositionProperties(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getPositionProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#getTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTag(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTag"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SparseMatrix#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#insertCols:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertCols(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", numCols: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "numCols",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "insertCols"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#insertRows:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertRows(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", numRows: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "numRows",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "insertRows"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SparseMatrix#numRows:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get numRows(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "numRows",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#removeCols:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeCols(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", numCols: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "numCols",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeCols"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#removeRows:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRows(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", numRows: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "numRows",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeRows"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#setItems:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setItems(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", values: "
                },
                {
                  "kind": "Reference",
                  "text": "SparseMatrixItem",
                  "canonicalReference": "fluid-framework!SparseMatrixItem:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertySet",
                  "canonicalReference": "@fluidframework/merge-tree!PropertySet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "setItems"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrix#setTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTag(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", tag: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "setTag"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SparseMatrixFactory:class",
          "docComment": "/**\n * @deprecated\n *\n * SparseMatrixFactory is an abandoned prototype. Use SharedMatrixFactory instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SparseMatrixFactory implements "
            },
            {
              "kind": "Reference",
              "text": "IChannelFactory",
              "canonicalReference": "@fluidframework/datastore-definitions!IChannelFactory:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SparseMatrixFactory",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SparseMatrixFactory#attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attributes(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SparseMatrixFactory.Attributes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrixFactory#create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(document: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISharedObject",
                  "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrixFactory#load:member(1)",
              "docComment": "/**\n * {@inheritDoc @fluidframework/datastore-definitions#IChannelFactory.load}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "load(runtime: "
                },
                {
                  "kind": "Reference",
                  "text": "IFluidDataStoreRuntime",
                  "canonicalReference": "@fluidframework/datastore-definitions!IFluidDataStoreRuntime:interface"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", services: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelServices",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelServices:interface"
                },
                {
                  "kind": "Content",
                  "text": ", attributes: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelAttributes",
                  "canonicalReference": "@fluidframework/datastore-definitions!IChannelAttributes:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISharedObject",
                  "canonicalReference": "@fluidframework/shared-object-base!ISharedObject:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runtime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "services",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SparseMatrixFactory.segmentFromSpec:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static segmentFromSpec(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONSegment",
                  "canonicalReference": "@fluidframework/merge-tree!IJSONSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "segmentFromSpec"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SparseMatrixFactory#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get type(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SparseMatrixFactory.Type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "fluid-framework!SparseMatrixItem:type",
          "docComment": "/**\n * @deprecated\n *\n * SparseMatrixItem is part of an abandoned prototype. Use SharedMatrix instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SparseMatrixItem = "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SparseMatrixItem",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "fluid-framework!SubSequence:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SubSequence<T> extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSegment",
              "canonicalReference": "@fluidframework/merge-tree!BaseSegment:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SubSequence",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "fluid-framework!SubSequence:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SubSequence` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(items: "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#append:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "append(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "append"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#canAppend:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canAppend(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "canAppend"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SubSequence",
                  "canonicalReference": "fluid-framework!SubSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#createSplitSegmentAt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected createSplitSegmentAt(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SubSequence",
                  "canonicalReference": "fluid-framework!SubSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createSplitSegmentAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence.fromJSONObject:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromJSONObject<U>(spec: "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SubSequence",
                  "canonicalReference": "fluid-framework!SubSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<U>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "U",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "fromJSONObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence.is:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static is(segment: "
                },
                {
                  "kind": "Reference",
                  "text": "ISegment",
                  "canonicalReference": "@fluidframework/merge-tree!ISegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "segment",
                  "canonicalReference": "fluid-framework!~segment"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "SubSequence",
                  "canonicalReference": "fluid-framework!SubSequence:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "segment",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "is"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SubSequence#items:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "@fluidframework/datastore-definitions!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#removeRange:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRange(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeRange"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#toJSONObject:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSONObject(): "
                },
                {
                  "kind": "Reference",
                  "text": "IJSONRunSegment",
                  "canonicalReference": "fluid-framework!IJSONRunSegment:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toJSONObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "fluid-framework!SubSequence#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SubSequence#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "fluid-framework!SubSequence.typeString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly typeString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "typeString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}